
services:
  fitness-app:
    build:
      context: .
      dockerfile: Dockerfile
    image: fitness-app-backend:latest
    ports:
      - "8090:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://fitness-app-db:3306/fitness_app_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: FontysPass12#
      JAVA_OPTS: "-Xms256m -Xmx512m"
    depends_on:
      - fitness-app-db
    networks:
      - fitness-network
    restart: unless-stopped


  fitness-app-db:
    image: mysql:latest
    container_name: fitness-app-db
    environment:
      MYSQL_DATABASE: fitness_app_db
      MYSQL_ROOT_PASSWORD: FontysPass12#
    ports:
      - "3308:3306"
    volumes:
      - db_data:/var/lib/mysql # Ensures database data persists
    networks:
      - fitness-network
    restart: unless-stopped

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    network_mode: "bridge" # Changed from host for better isolation (host is risky for cross-platform setups)
    environment:
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: "true"
      SONAR_WEB_JVM_OPTS: "-Xmx512m -Xms512m -XX:+HeapDumpOnOutOfMemoryError"
    ports:
      - "9000:9000"
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - fitness-app
    restart: unless-stopped

  fitness-app-frontend:
    image: fitness-app-frontend:latest  # Fallback to locally built image
    container_name: fitness-app-frontend
    ports:
      - "5173:80"
    depends_on:
      - fitness-app
    networks:
      - fitness-network
    restart: unless-stopped
    build:
      context: ./frontend  # This must match the cloned frontend repo folder
      dockerfile: Dockerfile  # Ensure this matches the actual Dockerfile name


networks:
  fitness-network:
    driver: bridge

volumes:
  db_data: # Persistent volume for the database
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
